export testCases;

import Lists from Stdlib.Lists;
import @(.list as list) from Stdlib.Lists;
import Matchers from Stdlib.Matchers;
import UnicodeScalars from Stdlib.Strings.UnicodeScalars;
import Tests from Stdlib.Tests;

fun countTestCase(string: String, expectedCount: Int) -> Tests.TestCase {
    Tests.testCase(string, fun () !_ {
        val count = UnicodeScalars.count(string);
        Tests.assertThat!(count, Matchers.isInt(expectedCount));
    })
}

val countTestSuite = Tests.suite("count", list(
    countTestCase("", 0),
    countTestCase("a", 1),
    countTestCase("abc", 3),
    countTestCase("☃", 1),
    countTestCase("𝔼", 1),
    countTestCase("☃𝔼☃𝔼☃", 5),
));

val foldLeftTestSuite = Tests.suite("foldLeft", list(
    Tests.testCase("empty string produces initial value", fun () !_ {
        val result = UnicodeScalars.foldLeft(fun (acc: Int, unicodeScalar: UnicodeScalar) => acc + 1, 0, "");
        Tests.assertThat!(result, Matchers.isInt(0));
    }),

    Tests.testCase("code points outside BMP are treated as single code point", fun () !_ {
        val result = UnicodeScalars.foldLeft(fun (acc: Int, unicodeScalar: UnicodeScalar) => acc + 1, 0, "☃𝔼☃𝔼☃");
        Tests.assertThat!(result, Matchers.isInt(5));
    }),
));

val joinTestSuite = Tests.suite("join", list(
    Tests.testCase("empty iterable is joined to empty string", fun () !_ {
        val result = UnicodeScalars.join(", ", list());
        Tests.assertThat!(result, Matchers.isString(""));
    }),

    Tests.testCase("singleton iterable is joined without separator", fun () !_ {
        val result = UnicodeScalars.join(", ", list("apple"));
        Tests.assertThat!(result, Matchers.isString("apple"));
    }),

    Tests.testCase("iterable with multiple values is joined with separator", fun () !_ {
        val result = UnicodeScalars.join(", ", list("apple", "banana", "coconut"));
        Tests.assertThat!(result, Matchers.isString("apple, banana, coconut"));
    }),
));

val testCases = Tests.suite(moduleName, list(
    countTestSuite,
    foldLeftTestSuite,
    joinTestSuite,
));

