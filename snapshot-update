#!/usr/bin/env python3.8

import argparse
import os
import sys


def _main():
    args = _parse_args()
    args.func(args)


def _parse_args():
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers(dest="command", required=True)

    approve_parser = subparsers.add_parser("approve")
    approve_parser.set_defaults(func=_approve)
    approve_parser.add_argument("--all", "-a", action="store_true")

    return parser.parse_args()


def _approve(args):
    snapshots_path = os.path.join(os.path.dirname(__file__), "snapshots")
    if args.all:
        for root, dirnames, filenames in os.walk(snapshots_path):
            for filename in filenames:
                path = os.path.join(root, filename)
                if _has_extension(path, "actual"):
                    expected_path = _replace_extension(path, "expected")
                    print("replace\n    {}\nwith\n    {}".format(expected_path, path), file=sys.stderr)
                    os.replace(path, expected_path)
    else:
        raise Exception("not implemented yet")


def _has_extension(path, extension):
    return os.path.splitext(path)[1] == "." + extension


def _replace_extension(path, extension):
    return os.path.splitext(path)[0] + "." + extension


if __name__ == "__main__":
    _main()
